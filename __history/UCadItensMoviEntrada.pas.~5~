unit UCadItensMoviEntrada;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, UItensMovEntrada, UDmItensMoviEntrada,UProduto,
  UUnidade, UMovimentacaoEntrada;

type
  TFormItensMoviEntrada = class(TForm)
    EdtIdItensMoviEntra: TEdit;
    LblIdItensMoviEntra: TLabel;
    EdtIdMoviEntrada: TEdit;
    LblMoviEntrada: TLabel;
    EdtIdProdItensMoviEntra: TEdit;
    LblProdItensMoviEntrada: TLabel;
    EdtIdUniItensMoviEntra: TEdit;
    LblUniItensMoviEntra: TLabel;
    BtIdItensMoviEntra: TButton;
    BtIdMoeItensMoviEntra: TButton;
    BtIdUniItensMoviEntra: TButton;
    BtIdProdItensMoviEntra: TButton;
    EdtNotaMoviEntrada: TEdit;
    EdtNomeProdItensMoviEntra: TEdit;
    EdtDescUniItensMoviEntra: TEdit;
    EdtQtdItensMoviEntra: TEdit;
    EdtVlrUnitarioItensMoviEntra: TEdit;
    EdtVlrDescontoItensMoviEntra: TEdit;
    EdtVlrFreteItensMoviEntra: TEdit;
    EdtVlrBrutoItensMoviEntra: TEdit;
    EdtVlrLiquiItensMoviEntra: TEdit;
    LblQtdItens: TLabel;
    LblVlrUnitario: TLabel;
    LblVlrDesconto: TLabel;
    LblVlrFrete: TLabel;
    LblVlrBruto: TLabel;
    LblVlrLiquido: TLabel;
    BtNovoItemMoviEntra: TButton;
    BtSalvarItemMoviEntra: TButton;
    BtExcluirItemMoviEntra: TButton;
    PanelItensMoviEntrada: TPanel;
    procedure BtNovoItemMoviEntraClick(Sender: TObject);
    procedure BtIdMoeItensMoviEntraClick(Sender: TObject);
    procedure BtIdUniItensMoviEntraClick(Sender: TObject);
    procedure BtIdProdItensMoviEntraClick(Sender: TObject);
  private
    { Private declarations }
    Produto : TProduto;
    Unidade : TUnidade;
    MovimentoEntrada : TMovimentacaoEntrada;


    Procedure LimparForm;
    Procedure PesquisarId;
    Procedure PesquisarUnidade;
    Procedure PesquisarProduto;
    Procedure PesquisarMovimento;

  public
    { Public declarations }
  end;

var
  FormItensMoviEntrada: TFormItensMoviEntrada;

implementation

uses
  UPesqProduto, UPesqUnidades, UPesqMoviEntrada;

{$R *.dfm}

{ TFormItensMoviEntrada }

procedure TFormItensMoviEntrada.BtIdMoeItensMoviEntraClick(Sender: TObject);
begin
    FormPesqMoviEntrada.ShowModal;
  if FormPesqMoviEntrada.FrmIdEntra > 0 then
  begin
    EdtIdMoviEntrada.Text := IntToStr(FormPesqMoviEntrada.FrmIdEntra);
    EdtNotaMoviEntrada.Text := IntToStr (FormPesqMoviEntrada.FrmNumNota);
  end;

end;

procedure TFormItensMoviEntrada.BtIdProdItensMoviEntraClick(Sender: TObject);
begin
  FormPesqProdutos.ShowModal;
  if FormPesqProdutos.FrmIdProduto > 0 then
  begin
    EdtIdProdItensMoviEntra.Text := IntToStr(FormPesqProdutos.FrmIdProduto);
    EdtNomeProdItensMoviEntra.Text := FormPesqProdutos.FrmNomeProduto;
  end;

end;

procedure TFormItensMoviEntrada.BtIdUniItensMoviEntraClick(Sender: TObject);
begin
  FormPesqUnidades.ShowModal;
  if FormPesqUnidades.FrmIdUnidades > 0 then
  begin
    EdtIdUniItensMoviEntra.Text := IntToStr(FormPesqUnidades.FrmIdUnidades);
    EdtDescUniItensMoviEntra.Text := FormPesqUnidades.FrmDescUnidades;
  end;

end;

procedure TFormItensMoviEntrada.BtNovoItemMoviEntraClick(Sender: TObject);
begin
  if (EdtIdItensMoviEntra.Text <> '') or(EdtIdMoviEntrada.Text <> '') or (EdtNotaMoviEntrada.Text <> '') or (EdtIdProdItensMoviEntra.Text <> '')
    or (EdtNomeProdItensMoviEntra.Text <> '') or  (EdtIdUniItensMoviEntra.Text <> '') or (EdtDescUniItensMoviEntra.Text <> '')
    or (EdtQtdItensMoviEntra.Text <> '') or (EdtVlrUnitarioItensMoviEntra.Text <> '') or (EdtVlrDescontoItensMoviEntra.Text <> '')
    or (EdtVlrFreteItensMoviEntra.Text <> '') or (EdtVlrBrutoItensMoviEntra.Text <> '') or (EdtVlrLiquiItensMoviEntra.Text <> '')
  then
    begin
    if Application.MessageBox('Você deseja limpar os dados preenchidos? ','Aviso',MB_ICONQUESTION+MB_YESNO) = mrNo then
      Exit;
  end;

  LimparForm;

end;

procedure TFormItensMoviEntrada.LimparForm;
begin
  EdtIdItensMoviEntra.Clear;
  EdtIdMoviEntrada.Clear;
  EdtNotaMoviEntrada.Clear;
  EdtIdProdItensMoviEntra.Clear;
  EdtNomeProdItensMoviEntra.Clear;
  EdtIdUniItensMoviEntra.Clear;
  EdtDescUniItensMoviEntra.Clear;
  EdtQtdItensMoviEntra.Clear;
  EdtVlrUnitarioItensMoviEntra.Clear;
  EdtVlrDescontoItensMoviEntra.Clear;
  EdtVlrFreteItensMoviEntra.Clear;
  EdtVlrBrutoItensMoviEntra.Clear;
  EdtVlrLiquiItensMoviEntra.Clear;

end;

procedure TFormItensMoviEntrada.PesquisarId;
begin

end;

procedure TFormItensMoviEntrada.PesquisarMovimento;
begin
  if EdtIdMoviEntrada.Text <> '' then
  begin
    MovimentoEntrada := TMovimentacaoEntrada.Create;
    MovimentoEntrada.IdEntra := StrToInt(EdtIdMoviEntrada.Text);

    if MovimentoEntrada.pesquisarIdEntrada then
    begin
      EdtNotaMoviEntrada.Text := IntToStr(MovimentoEntrada.NumNota);
    end
    else
    begin
      ShowMessage('Movimento de entrada não localizado!');
    end;

    MovimentoEntrada.Free;
  end;

end;

procedure TFormItensMoviEntrada.PesquisarProduto;
begin
  if EdtIdProdItensMoviEntra.Text <> '' then
  begin
    Produto := TProduto.Create;
    Produto.Id := StrToInt(EdtIdProdItensMoviEntra.Text);

    if Produto.pesquisarId then
    begin
      EdtNomeProdItensMoviEntra.Text := Produto.Nome;
    end
    else
    begin
      ShowMessage('Produto não localizado!');
    end;

    Produto.Free;
  end;

end;

procedure TFormItensMoviEntrada.PesquisarUnidade;
begin
  if EdtIdUniItensMoviEntra.Text <> '' then
  begin

    Unidade := TUnidade.Create;
    Unidade.Id := StrToInt(EdtIdUniItensMoviEntra.Text);

    if Unidade.pesquisarId then
    begin

      EdtDescUniItensMoviEntra.Text := Unidade.Descricao;

    end
    else
    begin
      ShowMessage('Unidade não localizado!');
    end;

    Unidade.Free;
  end;
end;

end.
