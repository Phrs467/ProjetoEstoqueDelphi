unit UCadFuncionarioObj;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, UFuncionario, UDepartamento,
  Data.DB;

type
  TFormCadFuncionarioObj = class(TForm)
    PanelCadFuncObj: TPanel;
    LblCadIdFuncObj: TLabel;
    EdtCadIdFuncObj: TEdit;
    LblCadNomeFuncObj: TLabel;
    EdtCadNomeFuncObj: TEdit;
    LblCadSenhaFuncObj: TLabel;
    EdtCadSenhaFuncObj: TEdit;
    LblCadDepFuncObj: TLabel;
    EdtCadIdDepFuncObj: TEdit;
    BtPesqCadFuncObj: TButton;
    EdtCadNomeDepFuncObj: TEdit;
    BtSalvarCadFunc: TButton;
    BtNovoCadFunc: TButton;
    DsCadFuncObj: TDataSource;
    ButtonPesqFunc: TButton;
    BtExcluirCadFunc: TButton;
    procedure BtSalvarCadFuncClick(Sender: TObject);
    procedure ButtonPesqFuncClick(Sender: TObject);
    procedure BtPesqCadFuncObjClick(Sender: TObject);
    procedure BtExcluirCadFuncClick(Sender: TObject);
    procedure BtNovoCadFuncClick(Sender: TObject);
    procedure EdtCadIdFuncObjKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
  private
    { Private declarations }
    Funcionario : TFuncionario;
    Departamento: TDepartamento;

    procedure LimparForm;

    procedure PesquisarFuncionario;
    procedure PesquisarDepartamento;
  public
    { Public declarations }
  end;

var
  FormCadFuncionarioObj: TFormCadFuncionarioObj;

implementation

uses
  UPesqDepartamento, UDmFuncionario, UPesqFuncionario;

{$R *.dfm}


procedure TFormCadFuncionarioObj.BtExcluirCadFuncClick(Sender: TObject);
begin
  Funcionario := TFuncionario.Create;

  Funcionario.Id := StrToInt(EdtCadIdFuncObj.Text);
  Funcionario.excluir;

  Funcionario.Free;

  LimparForm;
end;

procedure TFormCadFuncionarioObj.BtNovoCadFuncClick(Sender: TObject);
begin

  if (EdtCadNomeFuncObj.Text <> '') and (EdtCadSenhaFuncObj.Text <> '') and (EdtCadIdDepFuncObj.Text <> '') then
  begin
    if Application.MessageBox('Você deseja limpar os dados preenchidos? ','Aviso',MB_ICONQUESTION+MB_YESNO) = mrNo then
      Exit;
  end;

  LimparForm;
end;

procedure TFormCadFuncionarioObj.BtPesqCadFuncObjClick(Sender: TObject);
begin
    FormPesqDepartamento.ShowModal;
  if FormPesqDepartamento.FrmIdDepartamento > 0 then
  begin
    EdtCadIdDepFuncObj.Text := IntToStr(FormPesqDepartamento.FrmIdDepartamento);
    EdtCadNomeDepFuncObj.Text := FormPesqDepartamento.FrmNomeDepartamento;
  end;

end;

procedure TFormCadFuncionarioObj.BtSalvarCadFuncClick(Sender: TObject);
begin
     Funcionario := TFuncionario.Create;

     Funcionario.Nome := EdtCadNomeFuncObj.Text;
     Funcionario.Senha := EdtCadSenhaFuncObj.Text;
     Funcionario.DepId := StrToInt(EdtCadIdDepFuncObj.Text);

    if (EdtCadNomeFuncObj.Text = '') or (EdtCadSenhaFuncObj.Text = '') then
      begin
        Application.MessageBox('Você deve preencher os campos obrigatórios','Aviso', MB_ICONEXCLAMATION+MB_OK);
        abort
      end;

     if EdtCadIdFuncObj.Text = '' then
        Funcionario.incluir
     else
     begin
       Funcionario.Id := StrToInt(EdtCadIdFuncObj.Text);
       Funcionario.alterar;
     end;
     Funcionario.Free;

end;


procedure TFormCadFuncionarioObj.ButtonPesqFuncClick(Sender: TObject);
begin
 FormPesqFunc.ShowModal;
  if FormPesqFunc.FrmIdFuncionario > 0 then
  begin
    EdtCadIdFuncObj.Text := IntToStr(FormPesqFunc.FrmIdFuncionario);
    PesquisarFuncionario;
  end;

end;

procedure TFormCadFuncionarioObj.EdtCadIdFuncObjKeyDown(Sender: TObject;
  var Key: Word; Shift: TShiftState);
begin
  //
  if key = VK_RETURN then
  begin
    PesquisarFuncionario;
  end;
end;

procedure TFormCadFuncionarioObj.LimparForm;
begin
  EdtCadIdFuncObj.Clear;
  EdtCadNomeFuncObj.Clear;
  EdtCadSenhaFuncObj.Clear;
  EdtCadIdDepFuncObj.Clear;
  EdtCadNomeDepFuncObj.Clear;

end;

procedure TFormCadFuncionarioObj.PesquisarDepartamento;
begin
  if EdtCadIdDepFuncObj.Text <> '' then
  begin

    Departamento := TDepartamento.Create;
    Departamento.Id := StrToInt(EdtCadIdDepFuncObj.Text);

    if Departamento.pesquisar then
    begin

      EdtCadNomeDepFuncObj.Text := Departamento.Nome;

    end
    else
    begin
      ShowMessage('Departamento não localizado!');
    end;

    Departamento.Free;
  end;

end;

procedure TFormCadFuncionarioObj.PesquisarFuncionario;
begin

  if EdtCadIdFuncObj.Text <> '' then
  begin

    Funcionario := TFuncionario.Create;
    Funcionario.Id := StrToInt(EdtCadIdFuncObj.Text);

    if Funcionario.pesquisarId then
    begin

      EdtCadIdFuncObj.Text := IntToStr(Funcionario.Id);
      EdtCadNomeFuncObj.Text := Funcionario.Nome;
      EdtCadSenhaFuncObj.Text := Funcionario.Senha;
      EdtCadIdDepFuncObj.Text := IntToStr(Funcionario.DepId);
      PesquisarDepartamento;

    end
    else
    begin
      ShowMessage('Funcionário não localizado!');
    end;

    Funcionario.Free;

  end;

end;

end.
