unit UCadProdutos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls,
  Data.DB, Vcl.Grids, Vcl.DBGrids, Vcl.ExtCtrls, Vcl.Menus, UProduto;

type
  TFormCadProdutos = class(TForm)
    editIdProd: TDBEdit;
    Label1: TLabel;
    editNomeProd: TDBEdit;
    Label2: TLabel;
    RadioPesqProd: TRadioGroup;
    EditPesqProdNome: TEdit;
    EditPesqProdId: TEdit;
    Label3: TLabel;
    Label4: TLabel;
    Button1: TButton;
    DBNavigator1: TDBNavigator;
    DBGrid1: TDBGrid;
    Label5: TLabel;
    DBEditCadProdUniId: TDBEdit;
    DBEditCadProdFornId: TDBEdit;
    lblCadProdForn: TLabel;
    MainMenu1: TMainMenu;
    Imprimir1: TMenuItem;
    BtPesqUniTela: TButton;
    EditPesqUniTela: TEdit;
    BtPesqFornTela: TButton;
    EditPesqFornTela: TEdit;
    dsProdTela: TDataSource;
    procedure Button1Click(Sender: TObject);
    procedure Imprimir1Click(Sender: TObject);
    procedure BtPesqUniTelaClick(Sender: TObject);
    procedure BtPesqFornTelaClick(Sender: TObject);
    procedure dsProdTelaDataChange(Sender: TObject; Field: TField);
    procedure FormActivate(Sender: TObject);
    procedure DBNavigator1Click(Sender: TObject; Button: TNavigateBtn);

  private
    { Private declarations }
    Produto: TProduto;
  public
    { Public declarations }
  end;

var
  FormCadProdutos: TFormCadProdutos;

implementation

{$R *.dfm}

uses UDmProdutos, URelatorioProd, UPesqUnidades, UDmUnidades, UPesqFornecedor, UDmFornecedor;

procedure TFormCadProdutos.BtPesqFornTelaClick(Sender: TObject);
begin
  FormPesqForn.ShowModal;
  if FormPesqForn.FrmIdForn > 0 then
  begin
    if not (DmFornecedor.dsFornecedor.State in [dsEdit, dsInsert]) then
    begin
      DmProdutos.dsProdutos.Edit;
    end;

    DBEditCadProdFornId.Field.Value := FormPesqForn.FrmIdForn;
    EditPesqFornTela.Text := FormPesqForn.FrmNomeForn;
  end;

end;

procedure TFormCadProdutos.BtPesqUniTelaClick(Sender: TObject);
begin
  FormPesqUnidades.ShowModal;
  if FormPesqUnidades.FrmIdUnidades > 0 then
  begin
    if not (DmProdutos.dsProdutos.State in [dsEdit, dsInsert]) then
    begin
      DmProdutos.dsProdutos.Edit;
    end;

    DBEditCadProdUniId.Field.Value := FormPesqUnidades.FrmIdUnidades;
    EditPesqUniTela.Text := FormPesqUnidades.FrmDescUnidades;
  end;

end;

procedure TFormCadProdutos.Button1Click(Sender: TObject);
begin
  if RadioPesqProd.ItemIndex = 0  then
    begin
      if EditPesqProdNome.Text <> '' then
        begin
          if not DmProdutos.qProdutos.Locate('Prod_Nome', EditPesqProdNome.Text, [loPartialKey]) then
            begin
             ShowMessage('Não encontrado!');
            end;
        end;
    end;

  if RadioPesqProd.ItemIndex = 1  then
    begin
      if EditPesqProdId.Text <> '' then
        begin
          if not DmProdutos.qProdutos.Locate('Prod_id', EditPesqProdId.Text, []) then
            begin
             ShowMessage('Não encontrado!');
            end;
        end;
    end;



end;



procedure TFormCadProdutos.DBNavigator1Click(Sender: TObject;
  Button: TNavigateBtn);
begin
  if Button = nbPost then
  begin

    if DmFornecedor.dsFornecedor.State in [dsInsert] then
    begin
      Produto := TProduto.Create;

      Produto.Id := 0;
      Produto.Nome := '';

      Produto.incluir;

      Produto.Free;
    end;

    if DmFornecedor.dsFornecedor.State in [dsEdit] then
    begin
      Produto := TProduto.Create;

      Produto.Id := 0;
      Produto.Nome := '';

      Produto.Alterar;

      Produto.Free;
    end;

  end;

  if Button = nbDelete then
  begin
      Produto := TProduto.Create;

      Produto.Id := 0;
      Produto.Nome := '';

      Produto.Excluir;

      Produto.Free;
  end;

end;

procedure TFormCadProdutos.dsProdTelaDataChange(Sender: TObject; Field: TField);
begin
  if self.Active then
  begin
     EditPesqUniTela.Text := DmUnidades.RetornaDescUnidades(DBEditCadProdUniId.Field.AsInteger);
     EditPesqFornTela.Text := DmFornecedor.RetornaNomeFornecedor(DBEditCadProdFornId.Field.AsInteger)
  end;

end;


procedure TFormCadProdutos.FormActivate(Sender: TObject);
begin
  dsProdTelaDataChange(nil, nil);
end;

procedure TFormCadProdutos.Imprimir1Click(Sender: TObject);
begin
  FormRelatorioProd.RLReportProdutos.Preview()
end;

end.
